{"ast":null,"code":"import { catchError, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/usuarioController';\n  }\n  validarLogin() {\n    const url = `${this.baseUrl}/validarLogin`;\n    const param = {\n      username: \"teste\",\n      senha: \"teste\"\n    };\n    return this.http.post(url, param).pipe(map(obj => console.log(obj)), catchError(e => this.errorHandler(e)));\n  }\n  errorHandler(e) {\n    throw new Error('Method not implemented.');\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAEC,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,yCAAyC;EAEX;EAExCC,YAAY;IACV,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,eAAe;IAC1C,MAAMC,KAAK,GAAE;MAACC,QAAQ,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAC;IAChD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACL,GAAG,EAACE,KAAK,CAAC,CAACI,IAAI,CACnCX,GAAG,CAAEY,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,EAC9Bb,UAAU,CAACgB,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EAAA;EAGHC,YAAY,CAACD,CAAM;IACjB,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;;AAjBWhB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFX;AAAM","names":["catchError","map","LoginService","constructor","http","validarLogin","url","baseUrl","param","username","senha","post","pipe","obj","console","log","e","errorHandler","Error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Janio Albuquerque\\Documents\\projetos\\petstore\\petstore-web\\src\\app\\views\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  baseUrl = 'http://localhost:8080/usuarioController';\n\n  constructor(private http: HttpClient) { }\n\n  validarLogin(){\n    const url = `${this.baseUrl}/validarLogin`;\n    const param ={username: \"teste\", senha: \"teste\"}\n    return this.http.post(url,param).pipe(\n      map((obj) => console.log(obj)),\n      catchError(e => this.errorHandler(e))\n    )}\n\n\n  errorHandler(e: any): any {\n    throw new Error('Method not implemented.');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}