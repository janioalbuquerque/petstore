{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor() {\n    this.loginValido = false;\n    this.isUsuarioLogado = false;\n    this.login = {\n      username: '',\n      senha: ''\n    };\n    this.msg = [{\n      type: 'success',\n      msg: `Logado com sucesso.`,\n      timeout: 5000,\n      animation: true\n    }, {\n      type: 'danger',\n      msg: `Usuário ou senha incorretos. Por favor, verifique suas informações e tente novamente.`,\n      timeout: 5000,\n      animation: true\n    }];\n    this.dismissible = true;\n    this.defaultAlerts = [];\n    this.alerts = this.defaultAlerts;\n  }\n  onClosed(dismissedAlert) {\n    this.alerts = this.alerts.filter(alert => alert === dismissedAlert);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };\n(loginService, router) => {};\nvalidarLogin();\nany;\n{\n  this.loginService.validarLogin(this.login.username, this.login.senha).subscribe(value => {\n    if (value) {\n      this.alerts.push(this.msg[0]);\n      this.router.navigate(['/home']);\n      this.isUsuarioLogado = true;\n    } else {\n      this.alerts.push(this.msg[1]);\n      this.isUsuarioLogado = false;\n    }\n  });\n}","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAApBC;IAEL,gBAAW,GAAQ,KAAK;IAExB,oBAAe,GAAG,KAAK;IAEvB,UAAK,GAAG;MACNC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;KACR;IAED,QAAG,GAAU,CACX;MACEC,IAAI,EAAE,SAAS;MACfC,GAAG,EAAE,qBAAqB;MAC1BC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;KACZ,EAED;MACEH,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAE,uFAAuF;MAC5FC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;KACZ,CACF;IAED,gBAAW,GAAG,IAAI;IAClB,kBAAa,GAAU,EAAE;IACzB,WAAM,GAAG,IAAI,CAACC,aAAa;EAOhB;EALXC,QAAQ,CAACC,cAAmB;IAC1B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKH,cAAc,CAAC;EACrE;CAGW;AApCAV,cAAc,eAL1BD,SAAS,CAAC;EACTe,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWhB,cAAc,CAoCd;SApCAA,cAAc;AAoCd,CAASiB,YAA0B,EAAUC,MAAc,KAAC,CAAG,CAAC;AAE3EC,YAAY,EAAE;AAAEC,GAAG;AAAC;EAElB,IAAI,CAACH,YAAY,CAACE,YAAY,CAAC,IAAI,CAACE,KAAK,CAACnB,QAAQ,EAAE,IAAI,CAACmB,KAAK,CAAClB,KAAK,CAAC,CAACmB,SAAS,CAAEC,KAAK,IAAI;IACxF,IAAGA,KAAK,EAAC;MACP,IAAI,CAACZ,MAAM,CAACa,IAAI,CAAC,IAAI,CAACnB,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAI,CAACa,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,IAAI,CAACC,eAAe,GAAG,IAAI;KAC5B,MAAI;MACH,IAAI,CAACf,MAAM,CAACa,IAAI,CAAC,IAAI,CAACnB,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAI,CAACqB,eAAe,GAAG,KAAK;;EAGhC,CAAC,CAAC","names":["Component","LoginComponent","constructor","username","senha","type","msg","timeout","animation","defaultAlerts","onClosed","dismissedAlert","alerts","filter","alert","selector","templateUrl","styleUrls","loginService","router","validarLogin","any","login","subscribe","value","push","navigate","isUsuarioLogado"],"sourceRoot":"","sources":["C:\\Users\\Janio Albuquerque\\Documents\\projetos\\petstore\\petstore-web\\src\\app\\views\\login\\login.component.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginValido: any = false;\n\n  isUsuarioLogado = false;\n\n  login = {\n    username: '',\n    senha: ''\n  }\n\n  msg: any[] = [\n    {\n      type: 'success',\n      msg: `Logado com sucesso.`,\n      timeout: 5000,      \n      animation: true\n    },\n\n    {\n      type: 'danger',\n      msg: `Usuário ou senha incorretos. Por favor, verifique suas informações e tente novamente.`,\n      timeout: 5000,      \n      animation: true\n    },\n  ];\n\n  dismissible = true;\n  defaultAlerts: any[] = [];\n  alerts = this.defaultAlerts;\n\n  onClosed(dismissedAlert: any): void {\n    this.alerts = this.alerts.filter(alert => alert === dismissedAlert);\n  }\n\n  constructor(\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  validarLogin(): any {\n    \n    this.loginService.validarLogin(this.login.username, this.login.senha).subscribe((value) => {\n      if(value){\n        this.alerts.push(this.msg[0]) \n        this.router.navigate(['/home']);\n        this.isUsuarioLogado = true;\n      }else{\n        this.alerts.push(this.msg[1])  \n        this.isUsuarioLogado = false; \n      }\n           \n    })\n\n\n   \n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}