{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs';\nlet LoginService = class LoginService {\n  constructor(snackBar, http) {\n    this.snackBar = snackBar;\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/usuarioController';\n  }\n  showMessage(msg, isError = false) {\n    this.snackBar.open(msg, '', {\n      duration: 3000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"top\",\n      panelClass: isError ? ['msg-error'] : ['msg-success']\n    });\n  }\n  validarLogin(username, senha) {\n    const param = {\n      username: \"\",\n      senha: \"\"\n    };\n    const url = `${this.baseUrl}/validarLogin?username=${username}&senha=${senha}`;\n    return this.http.post(url, param).pipe(map(obj => console.log(obj)), catchError(e => this.errorHandler(e)));\n  }\n  errorHandler(e) {\n    throw new Error('Method not implemented.');\n  }\n};\nLoginService = __decorate([Injectable({\n  providedIn: 'root'\n})], LoginService);\nexport { LoginService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,UAAU,EAAEC,GAAG,QAAQ,MAAM;AAK/B,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,QAAqB,EAAUC,IAAgB;IAA/C,aAAQ,GAARD,QAAQ;IAAuB,SAAI,GAAJC,IAAI;IAFvD,YAAO,GAAG,yCAAyC;EAEoB;EAEvEC,WAAW,CAACC,GAAW,EAAEC,UAAmB,KAAK;IAC/C,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACF,GAAG,EAAC,EAAE,EAAC;MACxBG,QAAQ,EAAE,IAAI;MACdC,kBAAkB,EAAE,OAAO;MAC3BC,gBAAgB,EAAE,KAAK;MACvBC,UAAU,EAAEL,OAAO,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa;KACrD,CAAC;EACJ;EAEAM,YAAY,CAACC,QAAgB,EAAEC,KAAa;IAC1C,MAAMC,KAAK,GAAE;MAACF,QAAQ,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC;IACtC,MAAME,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,0BAA0BJ,QAAQ,UAAUC,KAAK,EAAE;IAC9E,OAAO,IAAI,CAACX,IAAI,CAACe,IAAI,CAACF,GAAG,EAACD,KAAK,CAAC,CAACI,IAAI,CACnCpB,GAAG,CAAEqB,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,EAC9BtB,UAAU,CAACyB,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EAAA;EAGHC,YAAY,CAACD,CAAM;IACjB,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;CACD;AA3BYzB,YAAY,eAHxBH,UAAU,CAAC;EACV6B,UAAU,EAAE;CACb,CAAC,GACW1B,YAAY,CA2BxB;SA3BYA,YAAY","names":["Injectable","catchError","map","LoginService","constructor","snackBar","http","showMessage","msg","isError","open","duration","horizontalPosition","verticalPosition","panelClass","validarLogin","username","senha","param","url","baseUrl","post","pipe","obj","console","log","e","errorHandler","Error","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Janio Albuquerque\\Documents\\projetos\\petstore\\petstore-web\\src\\app\\views\\login\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  baseUrl = 'http://localhost:8080/usuarioController';\n\n  constructor(private snackBar: MatSnackBar, private http: HttpClient) { }\n\n  showMessage(msg: string, isError: boolean = false): void{\n    this.snackBar.open(msg,'',{\n      duration: 3000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"top\",\n      panelClass: isError ? ['msg-error'] : ['msg-success']\n    })\n  }\n\n  validarLogin(username: String, senha: String){\n    const param ={username: \"\", senha: \"\"}\n    const url = `${this.baseUrl}/validarLogin?username=${username}&senha=${senha}`;\n    return this.http.post(url,param).pipe(\n      map((obj) => console.log(obj)),\n      catchError(e => this.errorHandler(e))\n    )}\n\n\n  errorHandler(e: any): any {\n    throw new Error('Method not implemented.');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}